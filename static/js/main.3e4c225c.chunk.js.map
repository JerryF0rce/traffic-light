{"version":3,"sources":["components/UI/trafficLight.js","components/Navigation/MainMenu.js","App.js","index.js"],"names":["TrafficLight","props","transformRoute","curLight","split","map","word","i","slice","toUpperCase","join","goToYellowLight","currentLight","currentLightElement","totalSeconds","state","duration","showTimer","timerId","document","querySelector","children","textContent","setInterval","classList","add","remove","setTimeout","clearInterval","history","replace","goToRandomLight","lightsRoutes","randomCount","Math","floor","random","sessionStorage","setItem","goToRedLight","goToGreenLight","redLight","blinkingDuration","yellowLight","greenLight","lastLight","getItem","currentLightRoute","this","location","pathname","className","Component","MainMenu","href","App","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3e4c225c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './trafficLight.css'\r\n   \r\nclass TrafficLight extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         redLight: {\r\n            duration: 10000,\r\n            blinkingDuration: 3000,\r\n         },\r\n         yellowLight: {\r\n            duration: 3000\r\n         }, \r\n         greenLight: {\r\n            duration: 15000,\r\n            blinkingDuration: 3000,\r\n         },\r\n         lastLight: sessionStorage.getItem('lastLight') || ''\r\n      };\r\n   }\r\n\r\n   componentDidMount() {\r\n      const currentLightRoute = this.props.history.location.pathname;\r\n      const currentLight = this.transformRoute(currentLightRoute);\r\n      const currentLightElement = document.querySelector(`.${currentLight}`);\r\n      // before '/yellow-light' after 'yellowLight'\r\n\r\n      if (currentLight !== 'yellowLight')sessionStorage.setItem('lastLight', currentLight);\r\n\r\n      if (currentLight === 'redLight' || 'greenLight') this.goToYellowLight(currentLight, currentLightElement);\r\n      if (currentLight === 'yellowLight' && !this.state.lastLight) this.goToRandomLight(currentLight);\r\n      if (currentLight === 'yellowLight' && this.state.lastLight === 'greenLight') this.goToRedLight(currentLight);\r\n      if (currentLight === 'yellowLight' && this.state.lastLight === 'redLight') this.goToGreenLight(currentLight);\r\n\r\n      currentLightElement.classList.add('activeLights');\r\n\r\n   }\r\n\r\n   transformRoute = (curLight) => {\r\n      return curLight\r\n         .split('-')\r\n         .map(\r\n            (word, i) => i === 0 ?  word.slice(1) : word[0].toUpperCase() + word.slice(1)\r\n         )\r\n         .join('');\r\n}\r\n\r\n   goToYellowLight = (currentLight , currentLightElement) => {\r\n      let totalSeconds = this.state[currentLight].duration / 1000;\r\n      let showTimer = null;\r\n      let timerId = null;\r\n      if (currentLight !== 'yellowLight') {\r\n         showTimer = document.querySelector(`.${currentLight}`).children[0];\r\n         showTimer.textContent = totalSeconds - 1;\r\n         timerId = setInterval(() => {\r\n            showTimer.textContent = totalSeconds - 2\r\n            totalSeconds--\r\n            if (totalSeconds === 4) {\r\n               currentLightElement.classList.add('hightlight')\r\n            }\r\n            if (totalSeconds === 0) {\r\n               currentLightElement.classList.remove('hightlight')\r\n            }\r\n         }, 1000);\r\n      }\r\n\r\n      setTimeout(() => {\r\n         clearInterval(timerId);\r\n         this.props.history.replace('/yellow-light');\r\n      }, this.state[currentLight].duration);\r\n   }\r\n\r\n   goToRandomLight = (currentLight) => {\r\n      const lightsRoutes = ['/green-light', '/red-light'];\r\n      let randomCount = Math.floor(Math.random()*2);\r\n      sessionStorage.setItem('lastLight', this.transformRoute(lightsRoutes[randomCount]));\r\n      setTimeout(() => {\r\n         this.props.history.replace(lightsRoutes[randomCount]);\r\n      }, this.state[currentLight].duration);\r\n   }\r\n\r\n   goToRedLight = (currentLight) => {\r\n      setTimeout(() => {\r\n         sessionStorage.setItem('lastLight', 'redLight');\r\n         this.props.history.replace('/red-light');\r\n      }, this.state[currentLight].duration);\r\n   }\r\n\r\n   goToGreenLight = (currentLight) => {\r\n      setTimeout(() => {\r\n         sessionStorage.setItem('lastLight', 'greenLight');\r\n         this.props.history.replace('/green-light');\r\n      }, this.state[currentLight].duration);\r\n   }\r\n\r\n   render () {\r\n      return (\r\n         <div className=\"trafficLight\">\r\n            <div className=\"light redLight\"><div className=\"timer\"></div></div>\r\n            <div className=\"light yellowLight\"></div>\r\n            <div className=\"light greenLight\"><div className=\"timer\"></div></div>\r\n         </div>\r\n      );\r\n   }\r\n   \r\n}\r\n\r\nexport default TrafficLight;","import React from 'react';\r\nimport './MainMenu.css';\r\n\r\nconst MainMenu = () => {\r\n   return (\r\n      <header>\r\n         <div className=\"container\">\r\n            <a href=\"/red-light\">Go to: /red-light</a>\r\n            <a href=\"/yellow-light\">Go to: /yellow-light</a>\r\n            <a href=\"/green-light\">Go to: /green-light</a>\r\n         </div>\r\n      </header>\r\n   );\r\n}\r\n\r\nexport default MainMenu;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport TrafficLight from './components/UI/trafficLight';\nimport MainMenu from './components/Navigation/MainMenu';\n\nclass App extends Component {\n\n   render() {\n      return (\n         <div className=\"App\"> \n            <Route path=\"/\" component={MainMenu}/>\n            <Route path=\"/red-light\" component={TrafficLight} />\n            <Route path=\"/yellow-light\" component={TrafficLight} />\n            <Route path=\"/green-light\" component={TrafficLight} />\n         </div>\n      );\n   }\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<Router> <App /> </Router>, document.getElementById('root'));\n\n"],"sourceRoot":""}